PROJECT(appmainprog)

IF(${CONSYS_WIFI_CHIP} MATCHES 1)
	message("mt6627 is defined")
	ADD_DEFINITIONS(-DCONSYS_WIFI_CHIP=1)
ENDIF()
IF(${WIFI_CHIP_6630} MATCHES 1)
	message("mt6630 is defined")
	ADD_DEFINITIONS(-DWIFI_CHIP_6630=1)
ENDIF()
IF(${WIFI_CHIP_7668} MATCHES 1)
	message("mt7668 is defined")
	ADD_DEFINITIONS(-DWIFI_CHIP_7668=1)
ENDIF()
IF(${DLNA_SUPPORT} MATCHES 1)
	message("dlna is defined")
	ADD_DEFINITIONS(-DDLNA_SUPPORT=1)
ENDIF()
IF(${MT8516_SOM} MATCHES 1)
	message("mt8516-som is defined")
	ADD_DEFINITIONS(-DMT8516_SOM=1)
ENDIF()
IF(${CONSYS_ALGO_WENZHI} MATCHES 1)
	message("CONSYS_ALGO_WENZHI is defined")
	ADD_DEFINITIONS(-DCONSYS_ALGO_WENZHI=1)
ENDIF()

IF(${NO_BLUEDROID} MATCHES 0)
	message("bluetooth and HFP APP are built in NO_BLUEDROID:${NO_BLUEDROID}")
	ADD_DEFINITIONS(-DBT_AND_HFP_SUPPORT=1)
ELSE()
	message("neither bluetooth nor HFP APP is built in NO_BLUEDROID:${NO_BLUEDROID}")
ENDIF()

IF(${GATT_TEST_SUPPORT} MATCHES 1)
	message("bluetooth_gatt_test is built in GATT_TEST_SUPPORT:${GATT_TEST_SUPPORT}")
	ADD_DEFINITIONS(-DBT_GATT_TEST_SUPPORT)
ELSE()
	message("bluetooth_gatt_test is not built in GATT_TEST_SUPPORT:${GATT_TEST_SUPPORT}")
ENDIF()	

IF(${BLE_SUPPORT} MATCHES 1)
	message("CONFIG_BLE_SUPPORT is defined")
	ADD_DEFINITIONS(-DCONFIG_BLE_SUPPORT)
	INCLUDE_DIRECTORIES(ble/inc)
	SET(BLE_LIBRARY "ble")
ENDIF()

ADD_DEFINITIONS(-DCLI_SUPPORT=1 -DHAVE_CONFIG_H)
ADD_COMPILE_OPTIONS(-g -Wall -Os -w -funwind-tables)
SET(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")

INCLUDE_DIRECTORIES(inc)

AUX_SOURCE_DIRECTORY(. SRCS)
ADD_SUBDIRECTORY(am)
ADD_SUBDIRECTORY(mw)
ADD_SUBDIRECTORY(cli)

ADD_SUBDIRECTORY(utils)
ADD_SUBDIRECTORY(acfg)
ADD_SUBDIRECTORY(assistant_stub)
ADD_SUBDIRECTORY(button_sound)
ADD_SUBDIRECTORY(misc)
ADD_SUBDIRECTORY(upg)
ADD_SUBDIRECTORY(user_interface)
IF(${NO_BLUEDROID} MATCHES 0)
ADD_SUBDIRECTORY(bluetooth)
ADD_SUBDIRECTORY(bluetooth_hfp)  

IF(${BLE_SUPPORT} MATCHES 1)
ADD_SUBDIRECTORY(ble)
ENDIF()

ENDIF()
ADD_SUBDIRECTORY(device_mngr)
ADD_SUBDIRECTORY(led)
ADD_SUBDIRECTORY(state_mngr)
ADD_SUBDIRECTORY(upg_control)
ADD_SUBDIRECTORY(playback)
ADD_SUBDIRECTORY(timerd)
ADD_SUBDIRECTORY(wifi_setting)

ADD_EXECUTABLE(appmainprog ${SRCS})
TARGET_LINK_LIBRARIES(appmainprog mas2)
TARGET_LINK_LIBRARIES(appmainprog am mw cli)
IF(${NO_BLUEDROID} MATCHES 0)
	TARGET_LINK_LIBRARIES(appmainprog acfg assistant_stub button_sound misc upg upg_control user_interface bluetooth bluetooth_hfp ${BLE_LIBRARY} device_mngr led state_mngr utils playback timerd wifi_setting)
ELSE()
	TARGET_LINK_LIBRARIES(appmainprog acfg assistant_stub button_sound misc upg upg_control user_interface device_mngr led state_mngr utils playback timerd wifi_setting)
ENDIF()
